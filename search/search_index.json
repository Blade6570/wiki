{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome Welcome to Wiki Pages of Information Technology and Communication Sciences at Tampere University. This wiki is meant to be a tool for personnel of our department, supporting research and teaching needs. You (yes you!) can contribute content to this wiki and help us building the common crowdsourced knowledge database. Technical Notes How to set up Remote Access How to install TUNI VPN Meta How to contrubute to the Wiki Links Computer Vision Group Tampere University","title":"Welcome"},{"location":"#welcome","text":"Welcome to Wiki Pages of Information Technology and Communication Sciences at Tampere University. This wiki is meant to be a tool for personnel of our department, supporting research and teaching needs. You (yes you!) can contribute content to this wiki and help us building the common crowdsourced knowledge database.","title":"Welcome"},{"location":"#technical-notes","text":"How to set up Remote Access How to install TUNI VPN","title":"Technical Notes"},{"location":"#meta","text":"How to contrubute to the Wiki","title":"Meta"},{"location":"#links","text":"Computer Vision Group Tampere University","title":"Links"},{"location":"Meta/how-to-contribute/","text":"How to Contribute to This Wiki? This Wiki \ud83d\udcd6 is a crowdsourced base of knowledge accumulated by generations of current and ex research assistants, students, faculty members, and other personnel. It is \"whatever\" annoying you don't remember after two months anymore or what frequently someone asks. The knowledge is expected to be contributed via Markdown files ( .md ) and submitted as Pull Requests to TUNI-ITC/wiki . This guide describes this process step-by-step. There are two options on how to contribute to Wiki: Do-it-yourself \ud83d\udc4d: you are following this guide and submitting the Pull Request. Ask somebody: for instance, you are not familiar with git and don't want to discover its beauty, then, create an Issue in TUNI-ITC/wiki and share a .md file with us. Here are the guide and an online Markdown editor . What Can I Contribute? Anything! Style, spelling, new knowledge, Wiki's engine. Anything, ok? \ud83e\udd17 Ok, What Should I Do? The pipeline boils down to these several steps which should be familiar to anyone who worked with an open-source project on some sort of Hub \ud83e\udd13 (GitHub, Bitbucket, GitLab, and such): Create an Issue (skip if feeling lazy or playing like a bad boy) Fork & Clone Add/Change Push to the Fork Create a Pull Request 1. Create an Issue This is completely optional and we would like to see an issue just to track the progress and maybe suggest where (which section) to put your knowledge or help you with something. 2. Fork & Clone You can edit directly through the GitHub web page (\"Add File\" and \"Edit\" button) or do it locally on your computer. We recommend learning to do it the hard way by forking and cloning it manually you will benefit from this knowledge in your career, otherwise skip this step. Fork means that you make a personal copy of this wiki - note that anyone can do that and it does not mess the main branch! To do that go to TUNI-ITC/wiki and press the top-right button Fork - if you don't have a Github account yet, you need to make one. After that, you should have the forked repo somewhere in your account, e.g., github.com/<MY_ACCOUNT>/wiki/ . To clone your fork locally, in terminal type: git clone https://github.com/<MY_ACCOUNT>/wiki/ and it's done! 3. Add/Change You may freely edit an existing file or create new, e.g., how-to-select-a-coffee-in-a-finnish-supermarket.md . Here are the guide and an online Markdown editor for you to play with. We are using Material Theme for MkDocs . Hence, you may also propose to add more functionality to our wiki. Check out the manuals of both to see what else we can add. Can I check locally how it will look? Sure thing! You will need to install the mkdocs-material engine. It might sound overwhelming but you will need only Python for it (even better if you have conda ): pip install mkdocs-material Once done, you can start a preview server locally cd /path/to/wiki mkdocs serve After, just type localhost:8000 in your browser. See more in the original documentation . 4. Push to the Changes to the Fork Commit your changes! You know how, right? Here is how # it will print the modifications were made compared to last commit git status # this will `stage` you changes git add how-to-do-something.md # this will commit the staged changes # (it may ask you to configure git if you are doing to for the first time) git commit -m \"added how-to-do-something.md\" git push 5. Create a Pull Request Open the page with your fork on GitHub: github.com/<MY_ACCOUNT>/wiki/ . At this point, you should be able to find the changes you made. Somewhere at the top, you will be asked if you want to make a Pull Request and that your branch is ahead of the main by some commits. Make the request, by adding comments, title, and check that you are proposing the files you expect and submit it. Someone will review and accept it. That's it!","title":"How to Contribute to This Wiki?"},{"location":"Meta/how-to-contribute/#how-to-contribute-to-this-wiki","text":"This Wiki \ud83d\udcd6 is a crowdsourced base of knowledge accumulated by generations of current and ex research assistants, students, faculty members, and other personnel. It is \"whatever\" annoying you don't remember after two months anymore or what frequently someone asks. The knowledge is expected to be contributed via Markdown files ( .md ) and submitted as Pull Requests to TUNI-ITC/wiki . This guide describes this process step-by-step. There are two options on how to contribute to Wiki: Do-it-yourself \ud83d\udc4d: you are following this guide and submitting the Pull Request. Ask somebody: for instance, you are not familiar with git and don't want to discover its beauty, then, create an Issue in TUNI-ITC/wiki and share a .md file with us. Here are the guide and an online Markdown editor . What Can I Contribute? Anything! Style, spelling, new knowledge, Wiki's engine. Anything, ok? \ud83e\udd17","title":"How to Contribute to This Wiki?"},{"location":"Meta/how-to-contribute/#ok-what-should-i-do","text":"The pipeline boils down to these several steps which should be familiar to anyone who worked with an open-source project on some sort of Hub \ud83e\udd13 (GitHub, Bitbucket, GitLab, and such): Create an Issue (skip if feeling lazy or playing like a bad boy) Fork & Clone Add/Change Push to the Fork Create a Pull Request","title":"Ok, What Should I Do?"},{"location":"Meta/how-to-contribute/#1-create-an-issue","text":"This is completely optional and we would like to see an issue just to track the progress and maybe suggest where (which section) to put your knowledge or help you with something.","title":"1. Create an Issue"},{"location":"Meta/how-to-contribute/#2-fork-clone","text":"You can edit directly through the GitHub web page (\"Add File\" and \"Edit\" button) or do it locally on your computer. We recommend learning to do it the hard way by forking and cloning it manually you will benefit from this knowledge in your career, otherwise skip this step. Fork means that you make a personal copy of this wiki - note that anyone can do that and it does not mess the main branch! To do that go to TUNI-ITC/wiki and press the top-right button Fork - if you don't have a Github account yet, you need to make one. After that, you should have the forked repo somewhere in your account, e.g., github.com/<MY_ACCOUNT>/wiki/ . To clone your fork locally, in terminal type: git clone https://github.com/<MY_ACCOUNT>/wiki/ and it's done!","title":"2. Fork &amp; Clone"},{"location":"Meta/how-to-contribute/#3-addchange","text":"You may freely edit an existing file or create new, e.g., how-to-select-a-coffee-in-a-finnish-supermarket.md . Here are the guide and an online Markdown editor for you to play with. We are using Material Theme for MkDocs . Hence, you may also propose to add more functionality to our wiki. Check out the manuals of both to see what else we can add. Can I check locally how it will look? Sure thing! You will need to install the mkdocs-material engine. It might sound overwhelming but you will need only Python for it (even better if you have conda ): pip install mkdocs-material Once done, you can start a preview server locally cd /path/to/wiki mkdocs serve After, just type localhost:8000 in your browser. See more in the original documentation .","title":"3. Add/Change"},{"location":"Meta/how-to-contribute/#4-push-to-the-changes-to-the-fork","text":"Commit your changes! You know how, right? Here is how # it will print the modifications were made compared to last commit git status # this will `stage` you changes git add how-to-do-something.md # this will commit the staged changes # (it may ask you to configure git if you are doing to for the first time) git commit -m \"added how-to-do-something.md\" git push","title":"4. Push to the Changes to the Fork"},{"location":"Meta/how-to-contribute/#5-create-a-pull-request","text":"Open the page with your fork on GitHub: github.com/<MY_ACCOUNT>/wiki/ . At this point, you should be able to find the changes you made. Somewhere at the top, you will be asked if you want to make a Pull Request and that your branch is ahead of the main by some commits. Make the request, by adding comments, title, and check that you are proposing the files you expect and submit it. Someone will review and accept it. That's it!","title":"5. Create a Pull Request"},{"location":"Technical-Notes/how-to-set-up-remote-access/","text":"How to Set up Remote Access I assume that you have an Ubuntu 16.04 or 18.04 desktop ( host ) at your office and you would like to access it remotely from, let's say, your personal laptop ( client ). The host machine will be reachable using a University-maintained laptop using University TUNI-STAFF WiFi or pre-installed VPN, for a self-maintained laptop you will need to do something extra. Connecting using a proxy server ( ssh-forward.cc.tut.fi ) Pros & Cons \ud83d\udc4d Only the ssh traffic is going through the University facilities unlike using a VPN. \ud83d\udc4d Stable. The IP of the host machine will not change after reconnection and the connection is lost rarely as it uses the wired connection. \ud83d\udc4d Fast. The machine is using a Gigabit connection from the wall socket. \ud83d\udca9 You will need to contact it-helpdesk@tuni.fi . This might take some time. \ud83d\udca9 ssh-forward.cc.tut.fi doesn't support key-pair authentication. You can only login with passwords. \ud83d\udca9 Different log-in procedure depending on the network you are using. One-step on roam.fi/eduroam/TUNI-STAFF , two-step on other networks. \ud83d\udca9/\ud83d\udc4d ssh-forward.cc.tut.fi has very limited disk space for each user (few MB). Therefore, can only be used as a proxy for your ssh connection which is its main purpose . How to set up Email it-helpdesk@tuni.fi to connect your office machine to pit.cs.tut.fi network. Specify the following things: a) the inventory number of the machine (on the sticker), b) MAC address of the socket in the machine you would like to use for the wired connection to the internet (you may have several Ethernet ports--you need only one), c) mention the Ethernet socket number from the wall that you will use. They will assign a fixed IP/FQDN and you will not need to type your credentials every 24 hours to have the internet connection. At this point, you should have had received the response from it-helpdesk@tuni.fi and be able to connect to the internet using the socket you specified. If so, check your IP and type host your_IP to find out the FQDN. It should be something like IP_reversed pointed to **********.pit.cs.tut.fi . Install openssh-server on your machine (host). This will allow ssh connection to this machine. Next, make sure no WiFi connection connects automatically after the startup. Type sudo nm-connection-editor in terminal (or just go to Edit connection from the status menu on 16.04). Click on saved connections and go to Preferences (setting icon at the bottom) > General > uncheck the box. Allow your Wired connection to automatically connect when available. sudo nm-connection-editor , go to General tab and make sure the box is checked. Now your machine (host) should be reachable from TUNI-maintained computers connected to TUNI-STAFF WiFi or VPN directly via ssh . To connect to it from a self-maintained/personal device, you need to get an access to ssh-forward.cc.tut.fi . For this, proceed to tut.fi/omatunnus (yes, tut not tuni ) -> Services -> System Access (wait 10 sec) -> search for and select ssh-forward.cc.tut.fi . You will get the confirmation email shortly. Initialize the two-step verification at ssh-forward.cc.tut.fi . For this, ssh with your TUNI credentials to ssh-forward.cc.tut.fi while being connected to one of the University networks ( roam.fi/eduroam/TUNI-STAFF or a university VPN)--you cannot do it from any other network but we got you here as well . Type google-authenticator . It will ask you several questions and show a QR code (resize your window to see it). Answer the questions as follows: Do you want authentication tokens... -> y Do you want me to update your \"/home/user/... -> y Do you want to disallow multiple uses... -> n By default, tokens are good for 30 seconds -> n If the computer that you are logging into -> y Install Google Authenticator app for your smartphone. It is going to be used for two-step authentication when non-university network is used (connecting from home internet). You don't need an account to use this service if it will ask--just find a button to scan a QR code. Once it is done it will create an entry with a 6-digit passcode which changes every 30 secs. To connect to your machine, use ssh -J your_tuni_username@ssh-forward.cc.tut.fi your_host_username@*********.pit.cs.tut.fi If you are on a University network ( roam.fi/eduroam/TUNI-STAFF or VPN), it will only ask for your TUNI and host passwords; If you are using a non-University network, it will also ask for a Verification Code which is a temporal code from Google Authenticator app you installed on your smartphone. Tip Config the ssh connection in ~/.ssh/config : Host connection_name HostName ***********. pit . cs . tut . fi User your_username_at_the_host_machine ProxyCommand ssh your - tuni - username @ssh - forward . cc . tut . fi - W % h : % p After doing this, you will be able to do ssh connection_name to ssh directly to *********.pit.cs.tut.fi , forward ports, and transfer large files using scp/rsync . It is also useful if you are using VSCode or any other text editor which supports remote development. Additionally, it is handy if you would like to mount folders from the host to your client. You can use sshfs connection_name:/path/to/remote_folder /path/to/local_folder . How to initialize the two-step verification remotely If you are setting up your connection remotely and you don't have an access to the university networks nor VPN at the moment, you still can do it. For this, you will need to apply for another TUT service. Proceed to tut.fi/omatunnus (yes, tut not tuni ) -> Services -> System Access (wait 10 sec) -> search for linux-ssh.cc.tut.fi or staff-linux.cc.tut.fi depending on whether your are a student or a staff. When the access is granted (5 mins), ssh to one of them, and from there ssh to ssh-forward.cc.tut.fi -- no verification code will be asked as these servers are in the university network.","title":"How to Set up Remote Access"},{"location":"Technical-Notes/how-to-set-up-remote-access/#how-to-set-up-remote-access","text":"I assume that you have an Ubuntu 16.04 or 18.04 desktop ( host ) at your office and you would like to access it remotely from, let's say, your personal laptop ( client ). The host machine will be reachable using a University-maintained laptop using University TUNI-STAFF WiFi or pre-installed VPN, for a self-maintained laptop you will need to do something extra.","title":"How to Set up Remote Access"},{"location":"Technical-Notes/how-to-set-up-remote-access/#connecting-using-a-proxy-server-ssh-forwardcctutfi","text":"","title":"Connecting using a proxy server (ssh-forward.cc.tut.fi)"},{"location":"Technical-Notes/how-to-set-up-remote-access/#pros-cons","text":"\ud83d\udc4d Only the ssh traffic is going through the University facilities unlike using a VPN. \ud83d\udc4d Stable. The IP of the host machine will not change after reconnection and the connection is lost rarely as it uses the wired connection. \ud83d\udc4d Fast. The machine is using a Gigabit connection from the wall socket. \ud83d\udca9 You will need to contact it-helpdesk@tuni.fi . This might take some time. \ud83d\udca9 ssh-forward.cc.tut.fi doesn't support key-pair authentication. You can only login with passwords. \ud83d\udca9 Different log-in procedure depending on the network you are using. One-step on roam.fi/eduroam/TUNI-STAFF , two-step on other networks. \ud83d\udca9/\ud83d\udc4d ssh-forward.cc.tut.fi has very limited disk space for each user (few MB). Therefore, can only be used as a proxy for your ssh connection which is its main purpose .","title":"Pros &amp; Cons"},{"location":"Technical-Notes/how-to-set-up-remote-access/#how-to-set-up","text":"Email it-helpdesk@tuni.fi to connect your office machine to pit.cs.tut.fi network. Specify the following things: a) the inventory number of the machine (on the sticker), b) MAC address of the socket in the machine you would like to use for the wired connection to the internet (you may have several Ethernet ports--you need only one), c) mention the Ethernet socket number from the wall that you will use. They will assign a fixed IP/FQDN and you will not need to type your credentials every 24 hours to have the internet connection. At this point, you should have had received the response from it-helpdesk@tuni.fi and be able to connect to the internet using the socket you specified. If so, check your IP and type host your_IP to find out the FQDN. It should be something like IP_reversed pointed to **********.pit.cs.tut.fi . Install openssh-server on your machine (host). This will allow ssh connection to this machine. Next, make sure no WiFi connection connects automatically after the startup. Type sudo nm-connection-editor in terminal (or just go to Edit connection from the status menu on 16.04). Click on saved connections and go to Preferences (setting icon at the bottom) > General > uncheck the box. Allow your Wired connection to automatically connect when available. sudo nm-connection-editor , go to General tab and make sure the box is checked. Now your machine (host) should be reachable from TUNI-maintained computers connected to TUNI-STAFF WiFi or VPN directly via ssh . To connect to it from a self-maintained/personal device, you need to get an access to ssh-forward.cc.tut.fi . For this, proceed to tut.fi/omatunnus (yes, tut not tuni ) -> Services -> System Access (wait 10 sec) -> search for and select ssh-forward.cc.tut.fi . You will get the confirmation email shortly. Initialize the two-step verification at ssh-forward.cc.tut.fi . For this, ssh with your TUNI credentials to ssh-forward.cc.tut.fi while being connected to one of the University networks ( roam.fi/eduroam/TUNI-STAFF or a university VPN)--you cannot do it from any other network but we got you here as well . Type google-authenticator . It will ask you several questions and show a QR code (resize your window to see it). Answer the questions as follows: Do you want authentication tokens... -> y Do you want me to update your \"/home/user/... -> y Do you want to disallow multiple uses... -> n By default, tokens are good for 30 seconds -> n If the computer that you are logging into -> y Install Google Authenticator app for your smartphone. It is going to be used for two-step authentication when non-university network is used (connecting from home internet). You don't need an account to use this service if it will ask--just find a button to scan a QR code. Once it is done it will create an entry with a 6-digit passcode which changes every 30 secs. To connect to your machine, use ssh -J your_tuni_username@ssh-forward.cc.tut.fi your_host_username@*********.pit.cs.tut.fi If you are on a University network ( roam.fi/eduroam/TUNI-STAFF or VPN), it will only ask for your TUNI and host passwords; If you are using a non-University network, it will also ask for a Verification Code which is a temporal code from Google Authenticator app you installed on your smartphone. Tip Config the ssh connection in ~/.ssh/config : Host connection_name HostName ***********. pit . cs . tut . fi User your_username_at_the_host_machine ProxyCommand ssh your - tuni - username @ssh - forward . cc . tut . fi - W % h : % p After doing this, you will be able to do ssh connection_name to ssh directly to *********.pit.cs.tut.fi , forward ports, and transfer large files using scp/rsync . It is also useful if you are using VSCode or any other text editor which supports remote development. Additionally, it is handy if you would like to mount folders from the host to your client. You can use sshfs connection_name:/path/to/remote_folder /path/to/local_folder .","title":"How to set up"},{"location":"Technical-Notes/how-to-set-up-remote-access/#how-to-initialize-the-two-step-verification-remotely","text":"If you are setting up your connection remotely and you don't have an access to the university networks nor VPN at the moment, you still can do it. For this, you will need to apply for another TUT service. Proceed to tut.fi/omatunnus (yes, tut not tuni ) -> Services -> System Access (wait 10 sec) -> search for linux-ssh.cc.tut.fi or staff-linux.cc.tut.fi depending on whether your are a student or a staff. When the access is granted (5 mins), ssh to one of them, and from there ssh to ssh-forward.cc.tut.fi -- no verification code will be asked as these servers are in the university network.","title":"How to initialize the two-step verification remotely"},{"location":"Technical-Notes/install-tuni-vpn/","text":"Install TUNI VPN The TUNI intra documentation is here https://intra.tuni.fi/en/handbook?page=2638 but its kind of a mess and therefore below easy to follow information. Self-maintained Linux Box (tested Ubuntu 18.04) eduVPN application is not available for Linux and thefore you must use openvpn. Generic instructions are available here https://eduvpn.tuni.fi/vpn-user-portal/documentation for various OS, but, for example, Ubuntu is described below. Install OpenVPN: ~$ sudo apt-get install network-manager-openvpn-gnome Generate your own at https://eduvpn.tuni.fi/vpn-user-portal/configurations (give name, e.g., \"joni-laptop\", and store somewhere). Start openvpn: ~$ sudo openvpn <PATH_TO_MY_GEN_CONFIG>.ovpn And that's it - your internet connection goes over VPN and you have access to university computers!! Note: You need to update the VPN configuration files every now and then (the expriry date by default is in the filename, e.g., \"Downloads/eduvpn.tuni.fi_internet_20201102_joni-laptop.ovpn#)","title":"Install TUNI VPN"},{"location":"Technical-Notes/install-tuni-vpn/#install-tuni-vpn","text":"The TUNI intra documentation is here https://intra.tuni.fi/en/handbook?page=2638 but its kind of a mess and therefore below easy to follow information.","title":"Install TUNI VPN"},{"location":"Technical-Notes/install-tuni-vpn/#self-maintained-linux-box-tested-ubuntu-1804","text":"eduVPN application is not available for Linux and thefore you must use openvpn. Generic instructions are available here https://eduvpn.tuni.fi/vpn-user-portal/documentation for various OS, but, for example, Ubuntu is described below. Install OpenVPN: ~$ sudo apt-get install network-manager-openvpn-gnome Generate your own at https://eduvpn.tuni.fi/vpn-user-portal/configurations (give name, e.g., \"joni-laptop\", and store somewhere). Start openvpn: ~$ sudo openvpn <PATH_TO_MY_GEN_CONFIG>.ovpn And that's it - your internet connection goes over VPN and you have access to university computers!! Note: You need to update the VPN configuration files every now and then (the expriry date by default is in the filename, e.g., \"Downloads/eduvpn.tuni.fi_internet_20201102_joni-laptop.ovpn#)","title":"Self-maintained Linux Box (tested Ubuntu 18.04)"}]}